NAME
       ohow - Converts a wikicreole file into an HTML file.

SYNOPSIS
       ohow [OPTION]... FILE...

DESCRIPTION
       ohow is a command line utility for compiling Wikicreole files into
       HTML.

EXTENSIONS
       Extensions are supported. Some are built-in which are described in the
       following sections.

<<a_manual project chapter version fragment|>>
       Expands to a link to the `chapter' page inside `project''s manual
       directory and for a given `version'. A `fragment' can be added.
       Default values:

       - project: current project

       - chapter: `project''s index page

       - version: "latest"

       - fragment: ""

       The expansion fails when neither `project' nor `chapter' is given.

<<a_api project sub-project version text|thing>>
       Expands to a link to the `thing' of the given `project' or/and
       `subproject' of the given `version'. The link's text can be chosen
       using the `text' argument. Default values:

       - project: current project

       - subproject: ""

       - version: "latest"

       - text: `thing'

<<a_api_type project subproject version text|thing>>
       See a_api.

<<a_api_code project subproject version text|thing>>
       See a_api.

LINKS
       ohow is supposed to compile each wiki independently but these might
       contain links. Since ohow is not responsible for checking for dead
       links, it guesses the redirection for each link in a consistent way.
       However ohow sill needs to assume a bunch of things and requires some
       extra information.

       - All the projects which links to each other must be placed inside the
       same directory.

       - Inside each project directory are the root directories of each
       version of the documentation.

       - The architecture inside each root (version of project) directory is
       less strict. However, if the a_manual tag is used, then the manual
       directory must not contain wikis in sub-directories.

       - If any of the a_api* tags is used, then each sub-project directory -
       if any - must be located inside the api directory and every wiki must
       be directly inside the api directory or its sub-project directory
       (i.e: no sub-directories are allowed).

       The options --root, --manual and --api can be used to explicitly
       provide the path to the, respectively, the root directory, the manual
       directory and the api directory.

ARGUMENTS
       FILE (required)
           A wikicreole file to convert to HTML.

OPTIONS
       --api=DIR
           Use the given api path.

       --assets=DIR
           Use the given assets directory path.

       --csw=FILE, --clientserverswitch=FILE, --client-server-switch=FILE
           Use the given list of wikis which must have a clientserverswitch.

       --default-subproject=NAME
           Mirrors the effect of the "default_subproject" feature in
           Ocsiforge's old config.js for compatibility reasons. Do not use it
           otherwise!

       --dv=FILE, --docversions=FILE, --docversion=FILE
           Use the given list of versions to figure inside the docversion
           widget.

       --help[=FMT] (default=auto)
           Show this help in format FMT. The value FMT must be one of `auto',
           `pager', `groff' or `plain'. With `auto', the format is `pager` or
           `plain' whenever the TERM env var is `dumb' or undefined.

       --images=DIR
           Use the given image directory path.

       -l, --local
           Appends `.html' at the end of each link redirection to make local
           navigation using file:// URLs possible.

       --manual=DIR
           Use the given manual path.

       -o FILE, --output=FILE
           Writes the HTML into the given file. Always overwrites. Overrides
           --print.

       -p, --print
           Print the HTML to stdout.

       --project=NAME
           The name of the project. Only useful for <<when-project>>.

       -r, --hl, --headless
           Produces raw HTML without head tag and not inside a body tag.

       --root=DIR (absent=/home/hugo/l/html_of_wiki/_build/default)
           Use the given root directory.

       -t FILE, --template=FILE
           Use the given template.

       --version
           Show version information.

EXIT STATUS
       ohow exits with the following status:

       0   on success.

       124 on command line parsing errors.

       125 on unexpected internal errors (bugs).

